{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useMap } from 'react-leaflet';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LocationHandler = () => {\n  _s();\n\n  const map = useMap();\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        map.setView([latitude, longitude]);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(LocationHandler, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n\n_c = LocationHandler;\nexport default LocationHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationHandler\");","map":{"version":3,"sources":["D:/wamp/www/controleReact/ControleReact/src/components/map/LocationHandler.jsx"],"names":["React","useEffect","useMap","LocationHandler","map","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","setView"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,eAAvB;;;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE1B,QAAMC,GAAG,GAAGF,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAI,iBAAiBI,SAArB,EAAgC;AAC5BA,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnD,cAAM;AAAEC,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,YAA0BF,QAAQ,CAACG,MAAzC;AACAP,QAAAA,GAAG,CAACQ,OAAJ,CAAY,CAACH,QAAD,EAAWC,SAAX,CAAZ;AACH,OAHD;AAIH;AACJ,GARQ,EAQN,EARM,CAAT;AAUA,sBAAO,qCAAP;AACH,CAfD;;GAAMP,e;UAEUD,M;;;KAFVC,e;AAiBN,eAAeA,eAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useMap } from 'react-leaflet'\n\n\nconst LocationHandler = () => {\n\n    const map = useMap()\n\n    useEffect(() => {\n\n        if ('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                const { latitude, longitude } = position.coords\n                map.setView([latitude, longitude])\n            })\n        }\n    }, [])\n\n    return <></>\n}\n\nexport default LocationHandler"]},"metadata":{},"sourceType":"module"}