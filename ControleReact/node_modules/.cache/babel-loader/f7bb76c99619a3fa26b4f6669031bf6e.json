{"ast":null,"code":"var _jsxFileName = \"D:\\\\wamp\\\\www\\\\controleReact\\\\ControleReact\\\\src\\\\components\\\\map\\\\Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport mapContext from './../../context/mapContext';\nimport MapClickHandler from './MapClickHandler';\nimport LocationHandler from './LocationHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nL.Icon.Default.imagePath = 'img/'; // fait marcher les icones de marqueurs\n\nconst Map = () => {\n  _s();\n\n  const {\n    state\n  } = useContext(mapContext);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [44.5596, 6.0798],\n    zoom: 13,\n    doubleClickZoom: false,\n    scrollWheelZoom: true,\n    className: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LocationHandler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), state.markers.map((position, i) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: position\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 45\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Map, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/wamp/www/controleReact/ControleReact/src/components/map/Map.jsx"],"names":["React","useContext","useState","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","L","mapContext","MapClickHandler","LocationHandler","Icon","Default","imagePath","Map","state","markers","map","position","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,YAAjD,EAA+DC,MAA/D,QAA6E,eAA7E;AACA,OAAO,0BAAP;AACA,OAAOC,CAAP,MAAc,SAAd;AAEA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAIAH,CAAC,CAACI,IAAF,CAAOC,OAAP,CAAeC,SAAf,GAA2B,MAA3B,C,CAAkC;;AAElC,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM;AAAEC,IAAAA;AAAF,MAAYhB,UAAU,CAACS,UAAD,CAA5B;AAEA,sBAAO,QAAC,YAAD;AACH,IAAA,MAAM,EAAE,CAAC,OAAD,EAAU,MAAV,CADL;AAEH,IAAA,IAAI,EAAE,EAFH;AAGH,IAAA,eAAe,EAAE,KAHd;AAIH,IAAA,eAAe,EAAE,IAJd;AAKH,IAAA,SAAS,EAAC,KALP;AAAA,4BAOH,QAAC,SAAD;AACI,MAAA,GAAG,EAAC;AADR;AAAA;AAAA;AAAA;AAAA,YAPG,eAWH,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAXG,eAYH,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAZG,EAaFO,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,CAACC,QAAD,EAAWC,CAAX,kBAAiB,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAED;AAAlB,OAAiCC,CAAjC;AAAA;AAAA;AAAA;AAAA,YAAnC,CAbE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH,CAnBD;;GAAML,G;;KAAAA,G;AAqBN,eAAeA,GAAf","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\n\nimport mapContext from './../../context/mapContext'\nimport MapClickHandler from './MapClickHandler'\nimport LocationHandler from './LocationHandler'\n\n\n\nL.Icon.Default.imagePath = 'img/' // fait marcher les icones de marqueurs\n\nconst Map = () => {\n\n    const { state } = useContext(mapContext)\n\n    return <MapContainer\n        center={[44.5596, 6.0798]}\n        zoom={13}\n        doubleClickZoom={false}\n        scrollWheelZoom={true}\n        className=\"map\"\n    >\n        <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        <MapClickHandler />\n        <LocationHandler />\n        {state.markers.map((position, i) => <Marker position={position} key={i} />)}\n    </MapContainer>\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}